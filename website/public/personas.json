{
"ai_application_engineer": "# AI Application Engineer\n\nDevelopers integrating and orchestrating AI capabilities into user-facing products.\n\n### Key Criteria\n- **Workflow & Agent Orchestration** – compose complex pipelines and manage interacting agents.\n- **Data & Experimental Flexibility** – connect to diverse models and data for experimentation.\n- **Creative Multimodal Exploration** – explore novel features across text, image, or audio.\n\n## Recommended Tools\n- **LangChain** – compose LLM-powered workflows.\n- **LangGraph** – manage complex multi-agent interactions.\n- **CrewAI** – coordinate specialized agents for feature development.\n- **Qwen_CLI** – experiment with high-quality local models.\n\n## Why These Tools\n- **LangChain** orchestrates modular steps in AI applications.\n- **LangGraph** handles dependencies across interacting agents.\n- **CrewAI** synchronizes specialized agents to deliver features.\n- **Qwen_CLI** enables quick testing of advanced local models.\n",
"beginner_student_creator": "# Beginner Student Creator\n\nStudents and hobbyists starting their coding journey and eager to learn through experimentation.\n\n### Key Criteria\n- **Beginner-Friendly Onboarding** – simple setup, guidance, and affordability.\n- **Visual/No-Code Development** – build apps through drag-and-drop components.\n- **Creative Multimodal Exploration** – experiment with text, image, or audio outputs.\n\n## Recommended Tools\n - **Replit_AI** – in-browser development with instant feedback.\n - **ChatGPT_agent** – interactive explanations of concepts and debugging help.\n - **Tabnine** – lightweight autocompletion for many editors.\n\n## Why These Tools\n - **Replit_AI** keeps everything in the browser, matching the need for ease of use.\n - **ChatGPT_agent** provides conversational learning and answers.\n - **Tabnine** supplies inexpensive autocompletion across environments.",
"business_user_automation_seeker": "# Business User Automation Seeker\n\nSales, presales, and management professionals who need to automate reports, presentations, or simple data analysis without becoming full developers.\n\n### Key Criteria\n- **Visual/No-Code Development** – build workflows using drag-and-drop components.\n- **Automation & Productivity** – reduce manual work and repetitive tasks.\n- **Beginner-Friendly Onboarding** – simple setup, guidance, and affordability.\n\n## Recommended Tools\n- **ChatGPT_agent** – draft presentations and automate document formatting.\n- **Zapier** – connect services and build workflows without code.\n- **Perplexity_Labs** – gather market research quickly.\n- **SQLAI** – generate and explain database queries for ad hoc reporting.\n\n## Why These Tools\n- **ChatGPT_agent** turns natural language into polished business materials.\n- **Zapier** automates cross-app processes without scripting.\n- **Perplexity_Labs** surfaces up-to-date competitive intel.\n- **SQLAI** empowers non-developers to retrieve data from databases.\n",
"creative_designer_technologist": "# Creative Designer Technologist\n\nDesigners and artists exploring interactive or multimedia experiences with the help of AI.\n\n### Key Criteria\n- **Beginner-Friendly Onboarding** – get started with minimal setup.\n- **Creative Multimodal Exploration** – mix text, image, and audio assets.\n- **Visual/No-Code Development** – prototype quickly with templates.\n\n## Recommended Tools\n- **Gemini_CLI** – experiment with text, image, and audio generation.\n- **Claude_Code** – ideate and scaffold creative code snippets.\n- **Replit_AI** – prototype interactive concepts quickly.\n\n## Why These Tools\n- **Gemini_CLI** enables multimodal experimentation across media types.\n- **Claude_Code** assists in crafting imaginative code structures.\n- **Replit_AI** allows fast prototyping of interactive ideas.",
"data_scientist": "# Data Scientist\n\nPractitioners focused on data pipelines, modeling, and analysis who want AI assistance in research and coding.\n\n### Key Criteria\n- **Data & Experimental Flexibility** – integrate with pipelines and ensure reproducibility.\n- **Workflow & Agent Orchestration** – coordinate multi-step pipelines.\n- **Automation & Productivity** – reduce manual data wrangling.\n- **Code Quality & Testing** – ensure reliable analyses and scripts.\n\n## Recommended Tools\n- **LangChain** – build data-aware applications with complex toolchains.\n- **Amazon_CodeWhisperer** – autocomplete for Python notebooks and AWS integration.\n- **SQLAI** – craft efficient queries and understand schema relationships.\n- **Qwen_CLI** – leverage LLMs locally for large dataset experiments.\n\n## Why These Tools\n- **LangChain** orchestrates multi-step data workflows.\n- **Amazon_CodeWhisperer** accelerates notebook coding within AWS ecosystems.\n- **SQLAI** ensures precise querying and schema comprehension.\n- **Qwen_CLI** runs open models locally for scalable experimentation.",
"devops_automation_engineer": "# DevOps Automation Engineer\n\nOperators focused on infrastructure, CI/CD pipelines, and cloud management who rely on AI tools to automate scripts and manage environments.\n\n### Key Criteria\n- **Workflow & Agent Orchestration** – automate infrastructure and CI/CD pipelines.\n- **Automation & Productivity** – streamline environment management.\n- **Code Quality & Testing** – catch issues in scripts and deployment pipelines.\n\n## Recommended Tools\n- **Warp** – AI-assisted terminal for efficient command-line workflows.\n- **LogiQCLI** – generate and explain infrastructure scripts on demand.\n- **Amazon_CodeWhisperer** – cloud-centric code suggestions for infrastructure as code.\n- **OpenHands** – run autonomous maintenance tasks across environments.\n\n## Why These Tools\n- **Warp** accelerates terminal workflows with command suggestions and reusable templates.\n- **LogiQCLI** produces infrastructure scripts with clear explanations.\n- **Amazon_CodeWhisperer** offers cloud-aware autocompletion for IaC tasks.\n- **OpenHands** can autonomously execute maintenance and deployment operations.\n",
"no_code_app_builder": "# No-Code App Builder\n\nEntrepreneurs or domain experts assembling full applications through low-code interfaces rather than traditional coding.\n\n### Key Criteria\n- **Beginner-Friendly Onboarding** – start building with minimal setup.\n- **Visual/No-Code Development** – drag-and-drop or template-based creation.\n- **Automation & Productivity** – streamline repetitive tasks when building apps.\n\n## Recommended Tools\n - **Replit_AI** – build and deploy apps from a browser.\n - **ChatGPT_agent** – translate requirements into working modules.\n - **Gemini_CLI** – add multimodal elements without heavy setup.\n\n## Why These Tools\n - **Replit_AI** enables browser-based development and deployment.\n - **ChatGPT_agent** converts natural language into functional modules.\n - **Gemini_CLI** adds multimodal features with minimal configuration.",
"professional_researcher": "# Professional Researcher\n\nResearchers who write papers, analyze literature, and prototype algorithms across domains.\n\n### Key Criteria\n- **Data & Experimental Flexibility** – manage datasets, models, and reproducible experiments.\n- **Workflow & Agent Orchestration** – coordinate multi-step research pipelines.\n- **Automation & Productivity** – streamline literature reviews and experiment setup.\n\n## Recommended Tools\n- **Perplexity_Labs** – comprehensive search over academic sources.\n- **ChatGPT_agent** – summarize papers and draft sections.\n- **LangGraph** – orchestrate experiments involving multiple models and tools.\n- **Sourcegraph_Cody** – explore and reuse research code repositories.\n\n## Why These Tools\n- **Perplexity_Labs** yields targeted academic references.\n- **ChatGPT_agent** speeds up literature digestion and writing.\n- **LangGraph** links datasets, models, and evaluation steps.\n- **Sourcegraph_Cody** uncovers reusable code across repositories.",
"qa_test_specialist": "# QA Test Specialist\n\nQuality engineers dedicated to test creation, bug detection, and code review.\n\n### Key Criteria\n- **Code Quality & Testing** – generate tests and detect bugs automatically.\n- **Codebase Comprehension** – navigate complex code for review.\n- **Automation & Productivity** – speed up verification with AI assistance.\n\n## Recommended Tools\n- **Amazon_CodeGuru** – automated code review with performance insights.\n- **DeepCode_AI** – identify vulnerabilities and anti-patterns.\n- **Goose** – propose fixes for failing tests and bugs.\n- **SWE-agent** – execute multi-step debugging plans.\n\n## Why These Tools\n- **Amazon_CodeGuru** automates code review and offers performance feedback.\n- **DeepCode_AI** surfaces security issues and code smells.\n- **Goose** suggests actionable fixes for failing tests.\n- **SWE-agent** carries out structured debugging sequences.\n",
"returning_engineering_manager": "# Returning Engineering Manager\n\nA manager who stepped away from daily coding and wants to regain hands-on experience using modern AI tools.\n\n### Key Criteria\n- **Codebase Comprehension** – regain context across large or unfamiliar projects.\n- **Beginner-Friendly Onboarding** – re-enter coding with guided setup.\n- **Automation & Productivity** – delegate routine tasks for faster ramp-up.\n\n## Recommended Tools\n- **GitHub_Copilot** – quickly recall syntax and patterns with inline guidance.\n- **ChatGPT_agent** – explore architectural questions and generate starting points for tasks.\n- **Sourcegraph_Cody** – search and understand unfamiliar parts of large codebases.\n- **Perplexity_Labs** – research best practices and emerging frameworks.\n\n## Why These Tools\n- **GitHub_Copilot** jump-starts coding fluency inside editors.\n- **ChatGPT_agent** clarifies design decisions and modern conventions.\n- **Sourcegraph_Cody** reveals context across repositories.\n- **Perplexity_Labs** keeps managers current on technology trends.",
"self_employed_consultant": "# Self-Employed Consultant\n\nIndependent professionals who automate workflows to serve more clients efficiently.\n\n### Key Criteria\n- **Automation & Productivity** – deliver results with minimal manual work.\n- **Workflow & Agent Orchestration** – assemble reusable automation pipelines.\n- **Data & Experimental Flexibility** – adapt to varied client data environments.\n- **Code Quality & Testing** – ensure reliable, maintainable implementations.\n\n## Recommended Tools\n- **LangGraph** – design reusable automation pipelines.\n- **OpenAI_GPT4o** – generate scripts that integrate with existing tools.\n- **Cursor** – maintain client-specific codebases with AI assistance.\n- **SWE-agent** – plan and execute multi-step coding tasks on behalf of clients.\n\n## Why These Tools\n- **LangGraph** structures reusable workflows for many clients.\n- **OpenAI_GPT4o** produces adaptable scripts from natural language.\n- **Cursor** streamlines edits across diverse projects.\n- **SWE-agent** automates complex implementations end to end.\n",
"traditional_ide_software_engineer": "# Traditional IDE Software Engineer\n\nEngineers accustomed to Visual Studio, IntelliJ, or similar IDEs who want AI assistance without leaving familiar workflows.\n\n### Key Criteria\n- **Codebase Comprehension** – understand large projects within familiar IDEs.\n- **Code Quality & Testing** – improve reliability and safety.\n- **Automation & Productivity** – speed up routine tasks within familiar environments.\n\n## Recommended Tools\n- **GitHub_Copilot** – inline code suggestions directly in major IDEs.\n- **Sourcegraph_Cody** – deep code understanding and navigation across large codebases.\n- **Codeium** – AI completions with broad IDE plugin support.\n- **Amazon_CodeWhisperer** – integrates with AWS tooling for cloud-centric projects.\n\n## Why These Tools\n- **GitHub_Copilot** fits smoothly into popular IDEs.\n- **Sourcegraph_Cody** accelerates comprehension of vast codebases.\n- **Codeium** supplies fast, privacy-friendly suggestions in many editors.\n- **Amazon_CodeWhisperer** links code hints to AWS services for deployment.",
"vibe_coder_entrepreneur": "# Vibe Coder Entrepreneur\n\nNon-traditional coders building applications to support a business idea with minimal formal training.\n\n### Key Criteria\n- **Beginner-Friendly Onboarding** – intuitive tooling that gets ideas running fast.\n- **Visual/No-Code Development** – assemble features without heavy coding.\n- **Creative Multimodal Exploration** – add innovative features across media.\n\n## Recommended Tools\n- **Cursor** – intuitive AI coding environment that emphasizes usability.\n- **Claude_Code** – natural language code generation for rapid prototyping.\n- **Replit_AI** – deploy full-stack apps without heavy setup.\n- **Gemini_CLI** – experiment with multimodal inputs for creative features.\n\n## Why These Tools\n- **Cursor** keeps the focus on ideas with built-in AI guidance.\n- **Claude_Code** translates ambitions into functional code snippets.\n- **Replit_AI** hosts and deploys demos instantly.\n- **Gemini_CLI** opens novel interactions with images or audio.\n"}
